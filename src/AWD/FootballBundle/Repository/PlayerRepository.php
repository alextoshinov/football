<?php

namespace AWD\FootballBundle\Repository;
use AWD\FootballBundle\Entity\Player as Player;
use Doctrine\ORM\EntityRepository;

/**
 * PlayerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlayerRepository extends EntityRepository
{
    public function getActivePlayers($team_id = null)
    {
      $qb = $this->createQueryBuilder('p')
         ->where('p.expires_at > :date')
         ->setParameter('date', date('Y-m-d H:i:s', time()))
        ->orderBy('p.id', 'DESC');

      if($team_id)
      {
        $qb->andWhere('p.team = :team_id')
           ->setParameter('team_id', $team_id);
      }

      $query = $qb->getQuery();

      return $query->getResult();
    }
    //
    public function getTeams()
    {
        $qb = $this->createQueryBuilder('t')
        ->orderBy('t.id', 'DESC');
        $query = $qb->getQuery();
        return $query->getResult();
    }
    //
    public function getForLuceneQuery($query)
    {
        $hits = Player::getLuceneIndex()->find($query);
 
        $pks = array();
        foreach ($hits as $hit)
        {
          $pks[] = $hit->pk;
        }
 
        if (empty($pks))
        {
          return array();
        }
 
        $q = $this->createQueryBuilder('p')
            ->where('p.id IN (:pks)')
            ->setParameter('pks', $pks)
            ->andWhere('p.is_activated = :active')
            ->setParameter('active', 1)
            ->setMaxResults(20)
            ->getQuery();
 
        return $q->getResult();
    }
    //
}
